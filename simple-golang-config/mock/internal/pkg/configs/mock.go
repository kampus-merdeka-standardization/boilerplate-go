// Code generated by MockGen. DO NOT EDIT.
// Source: internal/pkg/configs/type.go
//
// Generated by this command:
//
//	mockgen -source=internal/pkg/configs/type.go -destination=mock/internal/pkg/configs/mock.go -package=internal_configs_mock
//

// Package internal_configs_mock is a generated GoMock package.
package internal_configs_mock

import (
	internal_configs "simple-golang-config/internal/pkg/configs"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockConfigLoader is a mock of ConfigLoader interface.
type MockConfigLoader struct {
	ctrl     *gomock.Controller
	recorder *MockConfigLoaderMockRecorder
}

// MockConfigLoaderMockRecorder is the mock recorder for MockConfigLoader.
type MockConfigLoaderMockRecorder struct {
	mock *MockConfigLoader
}

// NewMockConfigLoader creates a new mock instance.
func NewMockConfigLoader(ctrl *gomock.Controller) *MockConfigLoader {
	mock := &MockConfigLoader{ctrl: ctrl}
	mock.recorder = &MockConfigLoaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigLoader) EXPECT() *MockConfigLoaderMockRecorder {
	return m.recorder
}

// LoadConfig mocks base method.
func (m *MockConfigLoader) LoadConfig() *internal_configs.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadConfig")
	ret0, _ := ret[0].(*internal_configs.Config)
	return ret0
}

// LoadConfig indicates an expected call of LoadConfig.
func (mr *MockConfigLoaderMockRecorder) LoadConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadConfig", reflect.TypeOf((*MockConfigLoader)(nil).LoadConfig))
}
